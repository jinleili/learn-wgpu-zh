import{_ as p,D as a,c as k,I as n,j as s,a as i,a3 as t,o as e}from"./chunks/framework.CsL-9n7-.js";const B=JSON.parse('{"title":"万能动画公式","description":"","frontmatter":{},"headers":[],"relativePath":"intermediate/vertex-animation/universal-animation-formula.md","filePath":"intermediate/vertex-animation/universal-animation-formula.md","lastUpdated":1719628610000}'),r={name:"intermediate/vertex-animation/universal-animation-formula.md"},E=s("h1",{id:"万能动画公式",tabindex:"-1"},[i("万能动画公式 "),s("a",{class:"header-anchor",href:"#万能动画公式","aria-label":'Permalink to "万能动画公式"'},"​")],-1),d=s("p",null,[i("要实现不同形态/形状之间的动态变换，核心算法很简单，就是通过"),s("strong",null,"构造同等数量的顶点/控制点"),i("来实现。")],-1),g=s("p",null,"在进行动态变换时，通常不同形态或形状之间的顶点数量会不相等。为了使两边的顶点能够一一对应起来，我们可以通过随机或插值的方式来补充顶点。这种方式不会破坏顶点数较少一边的造型，相当于某些点有了分身。通过对对应顶点的插值计算，就能够实现形态的变换。",-1),y=s("p",null,"此万能动画公式的优点在于它足够简单且通用。无论是对于简单的形状变换还是复杂的动态效果，都可以通过构造同等数量的顶点来实现。而且，运用不同的插值算法，还能灵活地控制形态变换的程度和速度。",-1),F=s("h2",{id:"示例-hilbert-曲线",tabindex:"-1"},[i("示例：Hilbert 曲线 "),s("a",{class:"header-anchor",href:"#示例-hilbert-曲线","aria-label":'Permalink to "示例：Hilbert 曲线"'},"​")],-1),c=t("",11);function u(b,o,m,A,D,C){const h=a("WebGPUExample"),l=a("AutoGithubLink");return e(),k("div",null,[E,d,g,y,F,n(h,{example:"hilbert_curve",autoLoad:"{true}"}),c,n(l,{customCodePath:"intermediate/hilbert-curve"})])}const v=p(r,[["render",u]]);export{B as __pageData,v as default};
