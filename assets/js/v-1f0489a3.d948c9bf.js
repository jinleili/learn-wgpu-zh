"use strict";(self.webpackChunklearn_wgpu_zh=self.webpackChunklearn_wgpu_zh||[]).push([[1522],{7433:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-1f0489a3","path":"/beginner/tutorial8-depth/","title":"深度缓冲区","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"从后往前排序","slug":"从后往前排序","link":"#从后往前排序","children":[]},{"level":2,"title":"像素深度","slug":"像素深度","link":"#像素深度","children":[]},{"level":2,"title":"挑战","slug":"挑战","link":"#挑战","children":[]}],"git":{"updatedTime":1665024513000},"filePathRelative":"beginner/tutorial8-depth/README.md"}')},3320:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var e=a(6252);const p=a.p+"assets/img/depth_problems.acc58392.png",t=a.p+"assets/img/forest_fixed.b2a78f4f.png",c=(0,e.uE)('<h1 id="深度缓冲区" tabindex="-1"><a class="header-anchor" href="#深度缓冲区" aria-hidden="true">#</a> 深度缓冲区</h1><p>让我们换个摄像机角度来仔细观察上个教程中的例子:</p><p><img src="'+p+'" alt="depth_problems.png"></p><p>应该排在后面的<strong>对象</strong>被渲染在了前面的对象之前。这是由绘制顺序引起的。默认情况下，新对象的像素数据将取代<strong>帧缓冲区</strong>（FrameBuffer）相同坐标上旧的像素数据。</p><p>有两种方式可以解决这个问题：将数据从后往前排序; 或者使用<strong>深度缓冲区</strong>（Depth Buffer）。</p><h2 id="从后往前排序" tabindex="-1"><a class="header-anchor" href="#从后往前排序" aria-hidden="true">#</a> 从后往前排序</h2><p>这是 2D 渲染的常用方法，因为很容易计算绘制<strong>对象</strong>的前后关系，甚至可以直接使用 Z 轴顺序。而在 3D 渲染中就有点棘手了，因为<strong>对象</strong>的前后关系会根据<strong>摄像机</strong>的角度而改变。</p><p>一个简单的方法是按照<strong>对象</strong>与<strong>摄像机</strong>的距离来排序。但这种方法也有缺陷，因为当大对象的模型中心坐标处在小对象后面时，大对象中本应在小对象前面的部分也会被渲染到后面。我们还会遇到对象本身重叠的问题。</p><p>如果想正确地实现绘制对象的前后关系，就需要有像素级的精度。这，就是 <strong>深度缓冲区</strong> 的作用。</p><h2 id="像素深度" tabindex="-1"><a class="header-anchor" href="#像素深度" aria-hidden="true">#</a> 像素深度</h2><p><strong>深度缓冲区</strong>是一个用来存储已渲染像素的 Z 轴坐标的纹理。在绘制新的像素时，wgpu 使用它来决定是替换数据还是丢弃。这种技术被称为<strong>深度测试</strong>，它将解决绘制顺序问题，而不需要我们对绘制对象进行排序!</p><p>让我们在 <code>texture.rs</code> 中添加一个函数来创建<strong>深度纹理</strong>。</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Texture</span> <span class="token punctuation">{</span>\n    <span class="token keyword">pub</span> <span class="token keyword">const</span> <span class="token constant">DEPTH_FORMAT</span><span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureFormat</span> <span class="token operator">=</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureFormat</span><span class="token punctuation">::</span><span class="token class-name">Depth32Float</span><span class="token punctuation">;</span> <span class="token comment">// 1.</span>\n    \n    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_depth_texture</span><span class="token punctuation">(</span>device<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">Device</span><span class="token punctuation">,</span> config<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">SurfaceConfiguration</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> size <span class="token operator">=</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">Extent3d</span> <span class="token punctuation">{</span> <span class="token comment">// 2.</span>\n            width<span class="token punctuation">:</span> config<span class="token punctuation">.</span>width<span class="token punctuation">,</span>\n            height<span class="token punctuation">:</span> config<span class="token punctuation">.</span>height<span class="token punctuation">,</span>\n            depth_or_array_layers<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> desc <span class="token operator">=</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureDescriptor</span> <span class="token punctuation">{</span>\n            label<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">,</span>\n            size<span class="token punctuation">,</span>\n            mip_level_count<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            sample_count<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n            dimension<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureDimension</span><span class="token punctuation">::</span><span class="token constant">D2</span><span class="token punctuation">,</span>\n            format<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token constant">DEPTH_FORMAT</span><span class="token punctuation">,</span>\n            usage<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureUsages</span><span class="token punctuation">::</span><span class="token constant">RENDER_ATTACHMENT</span> <span class="token comment">// 3.</span>\n                <span class="token operator">|</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureUsages</span><span class="token punctuation">::</span><span class="token constant">TEXTURE_BINDING</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> texture <span class="token operator">=</span> device<span class="token punctuation">.</span><span class="token function">create_texture</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">let</span> view <span class="token operator">=</span> texture<span class="token punctuation">.</span><span class="token function">create_view</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">TextureViewDescriptor</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">let</span> sampler <span class="token operator">=</span> device<span class="token punctuation">.</span><span class="token function">create_sampler</span><span class="token punctuation">(</span>\n            <span class="token operator">&amp;</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">SamplerDescriptor</span> <span class="token punctuation">{</span> <span class="token comment">// 4.</span>\n                address_mode_u<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">AddressMode</span><span class="token punctuation">::</span><span class="token class-name">ClampToEdge</span><span class="token punctuation">,</span>\n                address_mode_v<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">AddressMode</span><span class="token punctuation">::</span><span class="token class-name">ClampToEdge</span><span class="token punctuation">,</span>\n                address_mode_w<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">AddressMode</span><span class="token punctuation">::</span><span class="token class-name">ClampToEdge</span><span class="token punctuation">,</span>\n                mag_filter<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">FilterMode</span><span class="token punctuation">::</span><span class="token class-name">Linear</span><span class="token punctuation">,</span>\n                min_filter<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">FilterMode</span><span class="token punctuation">::</span><span class="token class-name">Linear</span><span class="token punctuation">,</span>\n                mipmap_filter<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">FilterMode</span><span class="token punctuation">::</span><span class="token class-name">Nearest</span><span class="token punctuation">,</span>\n                compare<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">CompareFunction</span><span class="token punctuation">::</span><span class="token class-name">LessEqual</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 5.</span>\n                lod_min_clamp<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100.0</span><span class="token punctuation">,</span>\n                lod_max_clamp<span class="token punctuation">:</span> <span class="token number">100.0</span><span class="token punctuation">,</span>\n                <span class="token punctuation">..</span><span class="token class-name">Default</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">Self</span> <span class="token punctuation">{</span> texture<span class="token punctuation">,</span> view<span class="token punctuation">,</span> sampler <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>定义 DEPTH_FORMAT 用于创建<strong>深度纹理</strong>及 <code>render_pipeline</code> 需要的 <code>DepthStencilState</code> 对象。</li><li><strong>深度纹理</strong>的宽高需要与<strong>展示平面</strong>一致（更准确的说，是需要与当前的 Color Attachment 一致）。我们传入展示平面使用的 <code>config</code> 参数来确保它们的宽高相同。</li><li>由于要对这个纹理进行渲染，我们需要给它添加 <code>RENDER_ATTACHMENT</code> 使用范围标志。</li><li>从技术的角度来看，我们不需要深度纹理的<strong>采样器</strong>，是我们的 <code>Texture</code> 结构体需要它。</li></ol><p>现在在 <code>State::new()</code> 中创建我们的 <code>depth_texture</code>：</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> depth_texture <span class="token operator">=</span> <span class="token namespace">texture<span class="token punctuation">::</span></span><span class="token class-name">Texture</span><span class="token punctuation">::</span><span class="token function">create_depth_texture</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>device<span class="token punctuation">,</span> <span class="token operator">&amp;</span>config<span class="token punctuation">,</span> <span class="token string">&quot;depth_texture&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后修改<strong>渲染管线</strong>以启用<strong>深度测试</strong>：</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> render_pipeline <span class="token operator">=</span> device<span class="token punctuation">.</span><span class="token function">create_render_pipeline</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">RenderPipelineDescriptor</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    depth_stencil<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">DepthStencilState</span> <span class="token punctuation">{</span>\n        format<span class="token punctuation">:</span> <span class="token namespace">texture<span class="token punctuation">::</span></span><span class="token class-name">Texture</span><span class="token punctuation">::</span><span class="token constant">DEPTH_FORMAT</span><span class="token punctuation">,</span>\n        depth_write_enabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        depth_compare<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">CompareFunction</span><span class="token punctuation">::</span><span class="token class-name">Less</span><span class="token punctuation">,</span> <span class="token comment">// 1.</span>\n        stencil<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">StencilState</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 2.</span>\n        bias<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">DepthBiasState</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>depth_compare</code> 字段指定通过<strong>深度测试</strong>的条件。使用 <code>LESS</code> 意味着像素将被从后往前绘制，大于当前位置的深度值的像素将被丢弃。下面是可选的所有枚举值：</li></ol><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[repr(C)]</span>\n<span class="token attribute attr-name">#[derive(Copy, Clone, Debug, Hash, Eq, PartialEq)]</span>\n<span class="token attribute attr-name">#[cfg_attr(feature = <span class="token string">&quot;serde&quot;</span>, derive(Serialize, Deserialize))]</span>\n<span class="token keyword">pub</span> <span class="token keyword">enum</span> <span class="token type-definition class-name">CompareFunction</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Undefined</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token class-name">Never</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token class-name">Less</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>\n    <span class="token class-name">Equal</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>\n    <span class="token class-name">LessEqual</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>\n    <span class="token class-name">Greater</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span>\n    <span class="token class-name">NotEqual</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span>\n    <span class="token class-name">GreaterEqual</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span>\n    <span class="token class-name">Always</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>还有一种类型的缓冲区叫做<strong>模版缓冲区</strong>（Stencil Buffer）。模版缓冲区和深度缓冲区通常被存储在同一个<strong>纹理</strong>中。这些字段控制着<strong>模版测试</strong>的数值。目前我们没有使用模版缓冲区，这里就使用默认值。在以后教程中再详情介绍模版缓冲区。</li></ol><p>不要忘了在 <code>State</code> 中存储 <code>depth_texture</code>：</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">Self</span> <span class="token punctuation">{</span>\n<span class="token comment">// ...</span>\ndepth_texture<span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还要记得修改 <code>resize()</code> 函数来更新<strong>深度纹理</strong>及它的<strong>纹理视图</strong>：</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">resize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> new_size<span class="token punctuation">:</span> <span class="token namespace">winit<span class="token punctuation">::</span>dpi<span class="token punctuation">::</span></span><span class="token class-name">PhysicalSize</span><span class="token operator">&lt;</span><span class="token keyword">u32</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    <span class="token keyword">self</span><span class="token punctuation">.</span>depth_texture <span class="token operator">=</span> <span class="token namespace">texture<span class="token punctuation">::</span></span><span class="token class-name">Texture</span><span class="token punctuation">::</span><span class="token function">create_depth_texture</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>device<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>config<span class="token punctuation">,</span> <span class="token string">&quot;depth_texture&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请确保更新了 <code>config</code> 之后一定要更新 <code>depth_texture</code>，否则程序就会崩溃，因为此时 <code>depth_texture</code> 与<code>surface</code> 纹理的宽高已经不一致了（还记得上边提到过的 “<strong>深度纹理</strong>的宽高需要与<strong>展示平面</strong>一致” 吗？）。</p><p>最后是修改 <code>render()</code> 函数，我们已经创建了<strong>深度纹理</strong>，但目前还没有使用。只需把它绑定到<strong>渲染通道</strong>的<code>depth_stencil_attachment</code> 字段即可：</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> <span class="token keyword">mut</span> render_pass <span class="token operator">=</span> encoder<span class="token punctuation">.</span><span class="token function">begin_render_pass</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">RenderPassDescriptor</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    depth_stencil_attachment<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">RenderPassDepthStencilAttachment</span> <span class="token punctuation">{</span>\n        view<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>depth_texture<span class="token punctuation">.</span>view<span class="token punctuation">,</span>\n        depth_ops<span class="token punctuation">:</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">Operations</span> <span class="token punctuation">{</span>\n            load<span class="token punctuation">:</span> <span class="token namespace">wgpu<span class="token punctuation">::</span></span><span class="token class-name">LoadOp</span><span class="token punctuation">::</span><span class="token class-name">Clear</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            store<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        stencil_ops<span class="token punctuation">:</span> <span class="token class-name">None</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是我们所要做的！不涉及<strong>着色器</strong>代码！现在运行该应用程序，将看到深度问题已不复存在：</p><p><img src="'+t+'" alt="forest_fixed.png"></p><h2 id="挑战" tabindex="-1"><a class="header-anchor" href="#挑战" aria-hidden="true">#</a> 挑战</h2><p><strong>深度缓冲区</strong>是一张纹理，所以我们可以在着色器中对其采样。请为深度纹理创建一个<strong>绑定组</strong>（或重用现有的），并将其渲染到屏幕上。</p>',32),o={},l=(0,a(3744).Z)(o,[["render",function(n,s){const a=(0,e.up)("WasmExample"),p=(0,e.up)("AutoGithubLink");return(0,e.wg)(),(0,e.iD)("div",null,[c,(0,e.Wm)(a,{example:"tutorial8_depth"}),(0,e.Wm)(p)])}]])}}]);